<?php

declare(strict_types=1);

namespace App\DomainObjects\Generated;

/**
 * THIS FILE IS AUTOGENERATED - DO NOT EDIT IT DIRECTLY.
 *
 * Class CampaignDomainObject
 * @package App\DomainObjects\Generated
 */
abstract class CampaignDomainObject extends \App\DomainObjects\AbstractDomainObject
{
    /** @var string */
    public const SINGULAR_NAME = 'campaign';

    /** @var string */
    public const PLURAL_NAME = 'campaigns';

    /** @var string */
    public const ID = 'id';

    /** @var string */
    public const ACCOUNT_ID = 'account_id';

    /** @var string */
    public const PUBLIC_ID = 'public_id';

    /** @var string */
    public const NAME = 'name';

    /** @var string */
    public const ALLOWED_DOMAINS = 'allowed_domains';

    /** @var string */
    public const DISPLAY_TYPE = 'display_type';

    /** @var string */
    public const HEADING = 'heading';

    /** @var string */
    public const SUB_HEADING = 'sub_heading';

    /** @var string */
    public const START_BEHAVIOUR = 'start_behaviour';

    /** @var string */
    public const ONLY_SHOW_ON_FIRST_SESSION = 'only_show_on_first_session';

    /** @var string */
    public const TAB_POSITION = 'tab_position';

    /** @var string */
    public const TAB_TEXT_COLOR = 'tab_text_color';

    /** @var string */
    public const TAB_BACKGROUND_COLOR = 'tab_background_color';

    /** @var string */
    public const TAB_TEXT = 'tab_text';

    /** @var string */
    public const POSITIVE_QUESTION = 'positive_question';

    /** @var string */
    public const NEGATIVE_QUESTION = 'negative_question';

    /** @var string */
    public const NEUTRAL_QUESTION = 'neutral_question';

    /** @var string */
    public const THANK_YOU_MESSAGE = 'thank_you_message';

    /** @var string */
    public const EMOJIS = 'emojis';

    /** @var string */
    public const EMOJI_TITLES = 'emoji_titles';

    /** @var string */
    public const SHOW_STATS = 'show_stats';

    /** @var string */
    public const STATS_DISPLAY_TYPE = 'stats_display_type';

    /** @var string */
    public const CREATED_AT = 'created_at';

    /** @var string */
    public const UPDATED_AT = 'updated_at';

    /** @var string */
    public const DELETED_AT = 'deleted_at';

    /** @var string */
    public const HAS_REACTIONS = 'has_reactions';

    /** @var string */
    public const BUTTON_BACKGROUND_COLOR = 'button_background_color';

    /** @var string */
    public const BUTTON_TEXT_COLOR = 'button_text_color';

    /** @var string */
    public const TYPE = 'type';

    /** @var string */
    public const IS_FOLLOW_UP_MANDATORY = 'is_follow_up_mandatory';

    /** @var string */
    public const ASK_FOLLOW_UP_QUESTION = 'ask_follow_up_question';

    /** @var int */
    protected int $id;

    /** @var int */
    protected int $account_id;

    /** @var string */
    protected ?string $public_id = null;

    /** @var string */
    protected ?string $name = null;

    /** @var string */
    protected ?string $allowed_domains = null;

    /** @var string */
    protected ?string $display_type = null;

    /** @var string */
    protected ?string $heading = null;

    /** @var string */
    protected ?string $sub_heading = null;

    /** @var string */
    protected ?string $start_behaviour = null;

    /** @var bool */
    protected ?bool $only_show_on_first_session = null;

    /** @var string */
    protected ?string $tab_position = null;

    /** @var string */
    protected ?string $tab_text_color = null;

    /** @var string */
    protected ?string $tab_background_color = null;

    /** @var string */
    protected ?string $tab_text = null;

    /** @var string */
    protected ?string $positive_question = null;

    /** @var string */
    protected ?string $negative_question = null;

    /** @var string */
    protected ?string $neutral_question = null;

    /** @var string */
    protected ?string $thank_you_message = null;

    /** @var string */
    protected ?string $emojis = null;

    /** @var string */
    protected ?string $emoji_titles = null;

    /** @var bool */
    protected ?bool $show_stats = null;

    /** @var string */
    protected ?string $stats_display_type = null;

    /** @var string */
    protected ?string $created_at = null;

    /** @var string */
    protected ?string $updated_at = null;

    /** @var string */
    protected ?string $deleted_at = null;

    /** @var bool */
    protected bool $has_reactions = false;

    /** @var string */
    protected ?string $button_background_color = null;

    /** @var string */
    protected ?string $button_text_color = null;

    /** @var string */
    protected ?string $type = null;

    /** @var bool */
    protected bool $is_follow_up_mandatory = true;

    /** @var bool */
    protected ?bool $ask_follow_up_question = true;

   /**
    * @return array
    */
    public function toArray(): array
    {
        return [
            'id' => $this->id ?? null,
            'account_id' => $this->account_id ?? null,
            'public_id' => $this->public_id ?? null,
            'name' => $this->name ?? null,
            'allowed_domains' => $this->allowed_domains ?? null,
            'display_type' => $this->display_type ?? null,
            'heading' => $this->heading ?? null,
            'sub_heading' => $this->sub_heading ?? null,
            'start_behaviour' => $this->start_behaviour ?? null,
            'only_show_on_first_session' => $this->only_show_on_first_session ?? null,
            'tab_position' => $this->tab_position ?? null,
            'tab_text_color' => $this->tab_text_color ?? null,
            'tab_background_color' => $this->tab_background_color ?? null,
            'tab_text' => $this->tab_text ?? null,
            'positive_question' => $this->positive_question ?? null,
            'negative_question' => $this->negative_question ?? null,
            'neutral_question' => $this->neutral_question ?? null,
            'thank_you_message' => $this->thank_you_message ?? null,
            'emojis' => $this->emojis ?? null,
            'emoji_titles' => $this->emoji_titles ?? null,
            'show_stats' => $this->show_stats ?? null,
            'stats_display_type' => $this->stats_display_type ?? null,
            'created_at' => $this->created_at ?? null,
            'updated_at' => $this->updated_at ?? null,
            'deleted_at' => $this->deleted_at ?? null,
            'has_reactions' => $this->has_reactions ?? null,
            'button_background_color' => $this->button_background_color ?? null,
            'button_text_color' => $this->button_text_color ?? null,
            'type' => $this->type ?? null,
            'is_follow_up_mandatory' => $this->is_follow_up_mandatory ?? null,
            'ask_follow_up_question' => $this->ask_follow_up_question ?? null,
        ];
    }
    
   /**
    * @param int $id
    * @return self
    */
    public function setId(int $id): self
    {
        $this->id = $id;

        return $this;
    }

   /**
    * @return int
    */
    public function getId(): int
    {
        return $this->id;
    }

   /**
    * @param int $account_id
    * @return self
    */
    public function setAccountId(int $account_id): self
    {
        $this->account_id = $account_id;

        return $this;
    }

   /**
    * @return int
    */
    public function getAccountId(): int
    {
        return $this->account_id;
    }

   /**
    * @param string $public_id
    * @return self
    */
    public function setPublicId(?string $public_id): self
    {
        $this->public_id = $public_id;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getPublicId(): ?string
    {
        return $this->public_id;
    }

   /**
    * @param string $name
    * @return self
    */
    public function setName(?string $name): self
    {
        $this->name = $name;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getName(): ?string
    {
        return $this->name;
    }

   /**
    * @param string $allowed_domains
    * @return self
    */
    public function setAllowedDomains(?string $allowed_domains): self
    {
        $this->allowed_domains = $allowed_domains;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getAllowedDomains(): ?string
    {
        return $this->allowed_domains;
    }

   /**
    * @param string $display_type
    * @return self
    */
    public function setDisplayType(?string $display_type): self
    {
        $this->display_type = $display_type;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getDisplayType(): ?string
    {
        return $this->display_type;
    }

   /**
    * @param string $heading
    * @return self
    */
    public function setHeading(?string $heading): self
    {
        $this->heading = $heading;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getHeading(): ?string
    {
        return $this->heading;
    }

   /**
    * @param string $sub_heading
    * @return self
    */
    public function setSubHeading(?string $sub_heading): self
    {
        $this->sub_heading = $sub_heading;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getSubHeading(): ?string
    {
        return $this->sub_heading;
    }

   /**
    * @param string $start_behaviour
    * @return self
    */
    public function setStartBehaviour(?string $start_behaviour): self
    {
        $this->start_behaviour = $start_behaviour;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getStartBehaviour(): ?string
    {
        return $this->start_behaviour;
    }

   /**
    * @param bool $only_show_on_first_session
    * @return self
    */
    public function setOnlyShowOnFirstSession(?bool $only_show_on_first_session): self
    {
        $this->only_show_on_first_session = $only_show_on_first_session;

        return $this;
    }

   /**
    * @return bool|null
    */
    public function getOnlyShowOnFirstSession(): ?bool
    {
        return $this->only_show_on_first_session;
    }

   /**
    * @param string $tab_position
    * @return self
    */
    public function setTabPosition(?string $tab_position): self
    {
        $this->tab_position = $tab_position;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getTabPosition(): ?string
    {
        return $this->tab_position;
    }

   /**
    * @param string $tab_text_color
    * @return self
    */
    public function setTabTextColor(?string $tab_text_color): self
    {
        $this->tab_text_color = $tab_text_color;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getTabTextColor(): ?string
    {
        return $this->tab_text_color;
    }

   /**
    * @param string $tab_background_color
    * @return self
    */
    public function setTabBackgroundColor(?string $tab_background_color): self
    {
        $this->tab_background_color = $tab_background_color;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getTabBackgroundColor(): ?string
    {
        return $this->tab_background_color;
    }

   /**
    * @param string $tab_text
    * @return self
    */
    public function setTabText(?string $tab_text): self
    {
        $this->tab_text = $tab_text;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getTabText(): ?string
    {
        return $this->tab_text;
    }

   /**
    * @param string $positive_question
    * @return self
    */
    public function setPositiveQuestion(?string $positive_question): self
    {
        $this->positive_question = $positive_question;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getPositiveQuestion(): ?string
    {
        return $this->positive_question;
    }

   /**
    * @param string $negative_question
    * @return self
    */
    public function setNegativeQuestion(?string $negative_question): self
    {
        $this->negative_question = $negative_question;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getNegativeQuestion(): ?string
    {
        return $this->negative_question;
    }

   /**
    * @param string $neutral_question
    * @return self
    */
    public function setNeutralQuestion(?string $neutral_question): self
    {
        $this->neutral_question = $neutral_question;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getNeutralQuestion(): ?string
    {
        return $this->neutral_question;
    }

   /**
    * @param string $thank_you_message
    * @return self
    */
    public function setThankYouMessage(?string $thank_you_message): self
    {
        $this->thank_you_message = $thank_you_message;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getThankYouMessage(): ?string
    {
        return $this->thank_you_message;
    }

   /**
    * @param string $emojis
    * @return self
    */
    public function setEmojis(?string $emojis): self
    {
        $this->emojis = $emojis;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getEmojis(): ?string
    {
        return $this->emojis;
    }

   /**
    * @param string $emoji_titles
    * @return self
    */
    public function setEmojiTitles(?string $emoji_titles): self
    {
        $this->emoji_titles = $emoji_titles;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getEmojiTitles(): ?string
    {
        return $this->emoji_titles;
    }

   /**
    * @param bool $show_stats
    * @return self
    */
    public function setShowStats(?bool $show_stats): self
    {
        $this->show_stats = $show_stats;

        return $this;
    }

   /**
    * @return bool|null
    */
    public function getShowStats(): ?bool
    {
        return $this->show_stats;
    }

   /**
    * @param string $stats_display_type
    * @return self
    */
    public function setStatsDisplayType(?string $stats_display_type): self
    {
        $this->stats_display_type = $stats_display_type;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getStatsDisplayType(): ?string
    {
        return $this->stats_display_type;
    }

   /**
    * @param string $created_at
    * @return self
    */
    public function setCreatedAt(?string $created_at): self
    {
        $this->created_at = $created_at;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getCreatedAt(): ?string
    {
        return $this->created_at;
    }

   /**
    * @param string $updated_at
    * @return self
    */
    public function setUpdatedAt(?string $updated_at): self
    {
        $this->updated_at = $updated_at;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getUpdatedAt(): ?string
    {
        return $this->updated_at;
    }

   /**
    * @param string $deleted_at
    * @return self
    */
    public function setDeletedAt(?string $deleted_at): self
    {
        $this->deleted_at = $deleted_at;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getDeletedAt(): ?string
    {
        return $this->deleted_at;
    }

   /**
    * @param bool $has_reactions
    * @return self
    */
    public function setHasReactions(bool $has_reactions): self
    {
        $this->has_reactions = $has_reactions;

        return $this;
    }

   /**
    * @return bool
    */
    public function getHasReactions(): bool
    {
        return $this->has_reactions;
    }

   /**
    * @param string $button_background_color
    * @return self
    */
    public function setButtonBackgroundColor(?string $button_background_color): self
    {
        $this->button_background_color = $button_background_color;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getButtonBackgroundColor(): ?string
    {
        return $this->button_background_color;
    }

   /**
    * @param string $button_text_color
    * @return self
    */
    public function setButtonTextColor(?string $button_text_color): self
    {
        $this->button_text_color = $button_text_color;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getButtonTextColor(): ?string
    {
        return $this->button_text_color;
    }

   /**
    * @param string $type
    * @return self
    */
    public function setType(?string $type): self
    {
        $this->type = $type;

        return $this;
    }

   /**
    * @return string|null
    */
    public function getType(): ?string
    {
        return $this->type;
    }

   /**
    * @param bool $is_follow_up_mandatory
    * @return self
    */
    public function setIsFollowUpMandatory(bool $is_follow_up_mandatory): self
    {
        $this->is_follow_up_mandatory = $is_follow_up_mandatory;

        return $this;
    }

   /**
    * @return bool
    */
    public function getIsFollowUpMandatory(): bool
    {
        return $this->is_follow_up_mandatory;
    }

   /**
    * @param bool $ask_follow_up_question
    * @return self
    */
    public function setAskFollowUpQuestion(?bool $ask_follow_up_question): self
    {
        $this->ask_follow_up_question = $ask_follow_up_question;

        return $this;
    }

   /**
    * @return bool|null
    */
    public function getAskFollowUpQuestion(): ?bool
    {
        return $this->ask_follow_up_question;
    }
}